There is a great amount of research dedicated to skyline query processing as well as extensions and applications of skyline in preference based data analysis[4?6]. The authors in Ref.[3] ?rstly introduce k-dominant skyline query for static data and propose three methods for it. The ?rst two algorithms, one scan algorithm and two scan algorithm, both use the property that a k-dominant skyline objects cannot be worse than any skyline on more than k dimensions. While OSA maintains a skyline bu?er to prune away objects that are k-dominated, TSA uses a set of candidate k-dominant skyline points for pruning and needs the second scan to verify the real answers. The third algorithm, sorted retrieval algorithm, iteratively chooses pre-sorted object according to some dimensions and processes the batch of data points in this dimension, and ?nally merge the results. OSA and TSA share a time complexity of O(d·n2). As for SRA, although its complexity is O(d·n·log n), the actual performance is uncertain because it highly depends on the choice of proper dimension. CoSMuQ is proposed for ad-hoc as well as streaming scenarios by M. Kontaki et al.[7]. This algorithm divides the data space into many grids and each grid maintains its local skyline object. Finally, continuous k-dominant skyline is implemented by computing the union of these grids. Compared with the above work, our proposed algorithm SCA can determine the k-dominant skyline directly and prune parts of the objects that are k-dominated in each round. It does not need extra space and computation cost for maintaining skyline set and unnecessary comparisons. It is very useful especially whenever the user only want to obtain reference towards a speci?c object instantly instead of all candidates. At the same time, we ?rstly propose progressive parallel algorithm for computing k-dominant skyline, which can support responsive interaction with users for applications dealing with massive database via returning answer incrementally in distributed environment.
