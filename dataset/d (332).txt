In this section, two data sets T10.I4.D1000K and T5.I4.D1000KAB
are used to evaluate the performance of the estDec method.
Each data set is generated by the same method as described in
[10] and the total number of items is 1,000. In all experiments, the
transactions of each data set are looked up one by one in sequence
to simulate the environment of an online data stream. In addition,
every value of a decay-base-life h used in these experiments is
above its lower bound. Each of two thresholds Sins and Sprn is
assigned relatively to the value of a predefined minimum support
Smin. These two thresholds are not necessarily to be the same in
practice. However, in all experiments, they are set to be the same
value. When the value of the threshold Sins is denoted by p%, the
actual value of the threshold Sins is equal to Smin×(p/100). Likewise,
Sprn is also equal to Smin×(p/100). All experiments are performed
on a 1.8GHz Pentium PC machine with 512MB main memory
running on Linux 7.3 and all programs are implemented in C.
Figure 2 shows the performance of the estDec method for the data
set T10.I4.D1000K. Figure 2-(a) shows the memory usage and it
is represented by the maximum number of itemsets in a
monitoring lattice. A minimum support Smin, a decay-base b and a
decay-base-life h are set to 0.001, 2 and 10,000 respectively. The
sequence of generated transactions is divided into 5 intervals each
of which consists of 200,000 transactions and a force-pruning
operation is performed in every 1,000 transactions. Since only
significant itemsets are maintained in a monitoring lattice by the
delayed-insertion and pruning of an itemset, the memory usage of
the estDec method remains the same although new transactions
are continuously generated. In addition, it decreases as the value
of Sins is increased.
Figure 2-(b) shows the average processing time in each interval of
the experiment in Figure 2-(a). The processing time is measured
by a period from the generation of a new transaction to the
delayed-insertion phase (PhasesⅠ-Ⅲ) of the estDec method. As

shown in this figure, the average processing time is less than
about 15 msec. It is influenced by not only the number of new
itemsets whose current support should be estimated for delayedinsertion
but also the current size of a monitoring lattice. The
number of itemsets maintained in a monitoring lattice is inversely
proportional to the value of a threshold Sins as shown in Figure 2-
(a). Therefore, as the value of Sins is increased, the average
processing time is decreased. Figure 2-(c) shows the average
processing time of the frequent itemset selection phase (Phase Ⅳ)
in each interval of the experiment in Figure 2-(a). Compared with
Figure 2-(b), the average processing time of this phase is
considerably larger. This is because it requires to search the entire
space of a monitoring lattice. However, it is also decreased as the
value of Sins is increased.
A term average support error is introduced to model the relative
accuracy of the proposed method. When two sets of mining results
R1={(ei, S1(ei)) | S1(ei)?Smin} and R2={(ej, S2(ej)) | S2(ej)?Smin} are
given for the same data set, the average support error ASE(R2|R1)
of R2 with respect to R1 is defined as follows:
ASE (R2|R1)

where |R1| denotes the number of itemsets in R1. As the average
support error of R2 gets smaller, the mining result of R2 is more
similar to R1. To show the accuracy of the estDec method, Figure
3 shows ASE(RestDec|RdApriori) for the experiment in Figure 2. The
mining results of the estDec method and the dApriori algorithm
are denoted by RestDec and RdApriori respectively. The dApriori
algorithm is the Apriori algorithm [10] with the decay mechanism
proposed in Section 2. The average support error
ASE(RestDec|RdApriori) of the estDec method is influenced by the
value of Sins. As it becomes smaller, more itemsets are maintained
in a monitoring lattice, which makes the mining result of the
estDec method be more accurate. When the value of Sprn is set to
be less than the value of Sins, the accuracy is slightly improved
although this experiment is not presented in this paper.
Figure 4 shows the adaptability of the estDec method for the
change of information in a data stream. In this experiment, a data
set T5.I4.D1000K-AB is experimented. The data set is composed
of two consecutive subparts. The front part is a set of 500,000
transactions generated by an item set A while the second part is a
set of 500,000 transactions generated by an item set B. There are
no common items in the item sets A and B. In this experiment, Smin
and b are set to 0.001 and 2 respectively. In order to illustrate how
rapidly the estDec method can adapt the change of information in
a data stream, a coverage rate CR(X) is introduced. It denotes the
ratio of frequent itemsets induced by an item set X in all frequent
itemsets as follows:

where |R| denotes the total number of frequent itemsets in a
monitoring lattice. As the value of a decay-base-life h becomes
smaller, the estDec method adapts more rapidly the transition of
information between the two subparts of the data set. By varying a
decay-base-life h, the adaptability of the estDec method for the
recent change of a data stream can be controlled. The similar
effect can be archived by varying a decay-base b. As the value of
a decay-base b becomes larger, the estDec method adapts more
rapidly the recent change of a data stream.