The emergence of network-enabled devices and the promise of ubiquitous network connectivity has made the development of pervasive computing environments an attractive research goal. A compelling set of applications enabled by these technology trends are context-aware, location-dependent ones, which adapt their behavior and user interface to the current location in space, for which they need to know their physical location with some degree of accuracy. We have started seeing the commercial deployment of such applications in outdoor settings (e.g., Hertz’s NeverLost navigator on
This research was supported in part by NTT Corporation, DARPA (Grant No. MDA972-99-1-0014), and IBM.
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for pro?t or commercial advantage, and that copies bear this notice and the full citation on the ?rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior speci?c permission and/or a fee. MobiCom 
rental cars [13]), where location information is obtained via widearea technologies like the Global Positioning System (GPS) [11] or using the cellular infrastructure. We believe that the widespread deployment of location-dependent applications inside of?ce buildings and homes has the potential to fundamentally change the way we interact with our immediate environment, where computing elements will be “ubiquitous” [20] or “pervasive” [9, 5]. In particular, our work will enable a new class of location-based applications and user interactions in the context of Project Oxygen at MIT [16].
The design and deployment of a system for obtaining location and spatial information in an indoor environment is a challenging task for several reasons, including the preservation of user privacy, administration and management overheads, system scalability, and the harsh nature of indoor wireless channels. The degree of privacy offered by the system is an important deployment consideration, since people often value their privacy highly. The administrative overhead to manage and maintain the hardware and software infrastructure must be minimal because of the potentially large number (possibly several thousands in a building) of devices and networked services that would be part of the system, and the communication protocols must be able to scale to a high spatial density of devices. Finally, indoor environments often contain substantial amounts of metal and other such re?ective materials that affect the propagation of radio frequency (RF) signals in non-trivial ways, causing severe multipath effects, dead-spots, noise, and interference.
Our goal is to develop a system that allows applications running on user devices and service nodes to learn their physical location. Once this information is obtained, services advertise themselves to a resource discovery service such as the MIT Intentional Naming System (INS) [3], IETF Service Location Protocol [18], Berkeley Service Discovery Service [8], or Sun’s Jini discovery service [14]. User applications do not advertise themselves unless they want to be discovered by others; they learn about services in their vicinity via an active map that is sent from a map server application, and interact with services by constructing queries for services at a required location. By separating the processes of tracking services and obtaining location information, multiple resource discovery systems can be accommodated. By not tracking users and services, user-privacy concerns are adequately met. We emphasize that our goal is a location-support system, rather than a conventional location-tracking system that tracks and stores location information for services and users in a centrally maintained database.
Over the past many months, we have designed and implemented Cricket, a location-support system for building-wide deployment in the context of Project Oxygen, and have conducted several experiments with it. We have integrated it with INS for resource discovery, and an active map application, which together enable location
dependent applications (and users) to discover and interact with services. This paper describes our design goals (later in this section), system architecture and algorithms (Section 2), implementation (Section 3), experimental results (Section 4), applications (Section 5), and a detailed comparison with previous location-tracking systems (Section 6).
The design of Cricket was driven by the following speci?c goals, which followed from the nature of our applications and from deployment considerations:

User privacy. Whenever a system for providing location information to clients has been deployed in the past, the issue of user privacy has arisen. This is because many previous systems were location tracking systems, where a database kept track of the locations of all the entities, including users in the system. To address this concern, we designed a location support system, which allows clients to learn their location without centralized tracking in order to construct location-speci?c queries for resources.

Decentralized administration. Our goal is widespread building-wide deployment. We believe that it is not possible to deploy and administer a system in a scalable way when all control and management functions are centralized. Our design is decentralized—the “owner” of a space in a building (e.g.,the occupant of a room) con?gures and installs a location beacon that announces the identity of that space (some character string) and each beacon seamlessly integrates with the rest of the system. Location receiver hardware, called a listener, is attached to every device of interest to a user. Listeners use an inference algorithm to determine the space in which they are currently located by listening to beacon announcements. There is no need for a central entity to keep track of each individual component in the system.

Network heterogeneity. A wide variety of network technologies exist in most building environments. In our own laboratory, devices and users connected over 10/100 Mbps Ethernet, three different types of indoor wireless LANs, cellular digital packet data (CDPD), infrared, public telephone, and powerline using X10 [21]. Independent of which technology they use to serve or gain access to information, many services and clients can bene?t from learning their location in an automatic way, and we would like to accommodate them. In our design, we achieve this by decoupling the Cricket system from other data communication mechanisms.

Cost. Achieving building-wide deployment requires costeffective components. We use commercial, off-the-shelf, inexpensive components in Cricket, setting and meeting the goal of less than U.S. $10 per location beacon and listener. Our design involves no custom hardware and is small enough to ?t in one’s palm.

Room-sized granularity. Our goal is a system where spatial regions can be determined to within one or two square feet, so as to distinguish portions of rooms. This requires the ability to demarcate and determine boundaries between regions corresponding to different beacons.
Cricket uses a combination of RF and ultrasound to provide a location-support service to users and applications. Wall- and
ceiling-mounted beacons are spread through the building, publishing location information on an RF signal. With each RF advertisement, the beacon transmits a concurrent ultrasonic pulse. The listeners receive these RF and ultrasonic signals, correlate them to each other, estimate distances to the different beacons using the difference in RF and ultrasonic signal propagation times, and therefore infer the space they are currently in. We describe the details of the technologies, the system parameters and con?guration, and the algorithms and protocols used in Cricket. The beacons use a decentralized randomized transmission algorithm to minimize collisions and interference amongst each other. The listeners implement a decoding algorithm to overcome the effects of ultrasound multipath and RF interference. We investigate the performance of three decoding algorithms and ?nd that picking the location corresponding to the beacon with minimum statistical mode performs the best, maximizing the likelihood of making the correct choice. We also discuss some practical deployment considerations when using ultrasound hardware, and some location-dependent applications we have developed using Cricket.