Before we describe directed diffusion, we must describe the
expected architectures of sensor networks. To do this, we
first describe the expected capabilities of sensor nodes. It
is not unreasonable to expect the following features in a future
sensor node: A matchbox sized form factor, battery
power source, an power-conserving processor clocked at several
hundred Mhz, program and data memory amounting to
several tens of MBytes, a radio modem that employs some
form of diversity coding [10], and an energy efficient MAC
layer based on, for example, TDMA [22]. As such, this node
would be capable of running a possibly stripped-down version
of a modern operating system; examples of such operating
systems include Windows CE and #CLinux.
Such a node could have one or more sensors. Examples of
such sensors include seismic geophones, infrared dipoles and
electret microphones for acoustic sensing. The analog-todigital
conversion system on such nodes might produce upto
70 ksamples per second, at upto 12 bit resolution. For reasons
of power conservation, some of the common signal processing
functions may be offioaded into a low-power ASIC.
In this way, the main processor need be woken up only when
events of interest occur. Finally, a sensor node may possess
a fully-functional GPS receiver.
Because of their compact form factor and their potential
low cost, it might be possible for a densely--within tens of
feet of each other--packed cluster of such sensor nodes to
be deployed, in a possibly unplanned fashion, near the phenomena
to be sensed--e.g., at busy intersections, or in the
interior of large machinery. The advantage of such sensor
networks is that, even with relatively cheap sensors, these
nodes can obtain high SNR (given that the signal generated
by any physical phenomena rapidly attenuates with
distance). Furthermore, given the spatial density of these
deployments, an individual sensor node may not have to
frequently perform multi-target resolution (i.e. distinguish
between different targets such as individuals and vehicles).
Such multi-target resolution can involve complex deconvolution
algorithms requiring non-trivial processing capability
[21].
By contrast, today's sensor deployments fall into two categories.
Large, complex sensor systems are usually deployed
very far away from the phenomena to be sensed, and employ
complex signal processing algorithms to separate targets
from environmental noise. Alternately, a carefully engineered
network of sensors is deployed in the field, but individual
sensors do not possess computation capability, instead
transmitting time series of the sensed phenomena to
one or more nodes which perform the data reduction and
filtering.
Should future sensor networks resemble sensor deployments
of old? In particular, should sensor nodes transmit time
series of data to some central node which performs the target
resolution? One key consideration in sensor networks--
energy efficiency--dictates otherwise. Because sensors are
likely to be battery-powered, and because sensor networks
will be expected to have lifetimes of several days (with possibly
prolonged lulls in activity), conserving battery resources
is a crucial requirement. This means that short-range hopby-
hop communication is preferred over direct long-range
communication to the destination. Coincidentally, such hopby-
hop communication also provides a form of communication
diversity in helping communicate around obstacles [21].
Energy efficiency also implies that it is infeasible to transmit
time-series data across the network, even hop-by-hop.
As [21] shows, performing local computation to reduce data
before transmission can obtain orders of magnitude energy
savings.
These energy efficiency considerations, coupled with the likely
availability of processing power and communication capability
in sensor nodes, argues for a different organization
of a sensor network. In this organization, individual nodes
reduce the sampled waveform generated by a target (e.g.,
a pedestrian or a vehicle) into a relatively coarse-grained
"event" description. This description usually contains a
"codebook value'--an event code--for the target, a timestamp,
a signal amplitude, and a degree of confidence in the
estimate. Nodes can then exchange these event descriptions
with their neighbors--who are also likely to have observed
the target--to refine the estimation, transmitting only a
short description back to a human operator.
Informally, with such an organization, a sensor network begins
to look like a distributed computing system. What communication
primitives can be employed in such unattended
sensor networks? While it is not infeasible to design these
sensor networks using IP and ad-hoc routing, the central
thesis of this paper is that a different set of communication
primitives can lead to more efficient sensor data dissemination.
Consider a simple sensor network for remote surveillance of
a region. In practice, such a network might consist of several
hundreds or thousands of sensor nodes deployed within
that region. In some cases, the sensor field may be deployed
in a regular fashion (e.g. a 2-dimensional lattice, or a linear
array) within that region. More generally, however, communication
and networking protocols cannot assume structured
sensor fields.
A user of this remote surveillance network would be able to
contact (using, perhaps a long-range radio link) one of the
sensors in the field, and pose the following task: "Every I
ms for the next T seconds, send me a location estimate of
any four-legged animal in subregion R of the sensor field".
In general, the network may support a variety of task types.
However, sensor networks are task-specific--unlike general
purpose communication networks, the task types are known
at the time the sensor network is deployed 2. We leverage
this important observation in our design.
Using hop-by-hop wireless communication and routing mechanisms
described in Section 3, this task is conVeyed to sensor
nodes in the subregion R of the sensor field. Each node then
2
More accurately, sensor networks may be reprogrammable and the tasks they
support may change slowly over time.
tasks its sensors to collect samples, and matches the sampled
waveform against a locally-stored library. If the node
detects a waveform typical of a four-legged animal, it generates
1/I event descriptions a millisecond, each of which
contains the following items: its own location, a codebook
â€§ value corresponding to the animal, the intensity of the signal,
and a degree of confidence in its estimation. Sensors
within region R may coordinate to pick the best estimate.
This estimate "packet" is then routed back towards the task
originator.
The focus of this paper is the design of dissemination mechanisms
for tasks and events. We describe this dissemination
mechanism in the context of the sensor network described
above, but with support for multiple concurrent task initiations
of the type specified above. We later argue that
our overall approach, directed diffusion, applies more generally
to other kinds of distributed sensor coordination. We
face several challenges in designing these mechanisms. First,
these mechanisms must scale to several thousands of sensor
nodes in the sensor field. Second, sensor nodes may fail,
may lose battery power, or may be temporarily unable to
communicate due to environmental factors. The dissemination
mechanisms must be robust to such failures. Finally,
wireless communication even over relatively short distances
consumes significant energy. The dissemination mechanisms
must minimize energy usage.
