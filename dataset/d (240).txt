A sensor node is a battery-powered, wireless computer. Typically, these nodes are physically small (a few cubic centimeters) and extremely low power (a few tens of milliwatts versus tens of watts for a typical laptop computer)2. Power is of utmost importance. If used naively, individual sensor nodes will deplete their energy supplies in only a few days. In contrast, if sensor nodes are very spartan about power consumption, months or years of lifetime are possible. Mica motes, for example, when operating at 2% duty cycle (between active and sleep modes) can achieve lifetimes in the 6 month range on a pair of AA batteries. This duty cycle limits the active time to 1.2 seconds per minute.
Mica motes have a 4Mhz, 8bit Atmel microprocessor. Their RFM TR1000 radios run at 40 kbits/second over a single shared CSMA channel. Radio messages are variable size. Typically about 10 48-byte messages (the default size in TinyDB) can be delivered per second. Power consumption tends to be dominated by radio communication. When powered on, radios consume about as much power as the processor. However, because communication is so slow, every bit of data transmitted by the radio costs as much energy as executing 1000 CPU instructions. As an additional feature, motes have an external 32kHz clock that the TinyOS operating system can synchronize with neighboring motes +/- 1 ms to ensure that neighbors are be powered up and listening when they wish to send a message[14].
Power consumption in sensors occurs in four phases, which we illustrate in Figure 2 via an annotated capture of an oscilloscope display showing current draw (which is proportional to power consumption) on a Mica mote running TinyDB. In “Snoozing” mode, where the node spends most of its time, the processor and radio are idle, waiting for a timer to expire or external event to wake the device. When the device wakes it enters the “Processing” mode, which consumes an order of magnitude more power than snooze mode, and where query results are generated locally. The mote then switches to a “Processing and Receiving” mode, where results are collected from neighbors over the radio. Finally, in the “Transmitting” mode, results for the query are delivered by the local mote – the noisy signal during this period re?ects switching as the receiver goes off and the transmitter comes on and then cycles back to a receiver-on, transmitter-off state.

 