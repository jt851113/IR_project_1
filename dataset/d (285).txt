Aside from choosing the appropriate language and programming abstractions, data-acquisition – the capturing of samples from the sensing hardware on the devices – is one of the fundamental challenges for this class of device. Acquisitional query processing(ACQP)[37] has to do with the active role that a declarative query processor for sensor networks must take in choosing when and where data should be captured. Unlike in a traditional database system, which simply processes whatever data happens to be on disk at the time, sensor networks can be con?gured to produce data at different rates or in response to different events. This recon?gurability is something that can be exploited during query processing to avoid unnecessary utilization of energy in the network and improve the resolution of results returned to the user. Existing sensor network database research has proposed several simple extensions to declarative languages for controlling data acquisition: most commonly, a sample rate is used to specify the periodicity of data acquisition. There are, however, a number of other possible policies for initiating data acquisition, for example:
‧ Asynchronous Acquisition: Rather than collecting data at a regular rate, samples could be acquired when some condition is met or some external event occurs, as described in our paper on ACQP[37]. Open problems in this space include understanding the appropriate language abstractions for specifying asynchronous rules and building an asynchronous query execution engine that is both low-power and able to quickly respond to external events. These two challenges are closely related since the expressiveness of the language must be suf?ciently constrained to allow ef?cient execution.
‧ Lifetime-based acquisition: The ACQP paper also discusses the possibility of allowing users to specify a desired network lifetime rather than a periodic sample rate. Given a lifetime, sensors in the network would adjust their sample rate based on available power and rate of power consumption over time. Unfortunately, the ACQP paper does not go into great detail about how this could be implemented, except in the simplest case where a node is forwarding data over a single network hop (e.g. is doing no additional communication besides its own.)
The challenge of lifetime optimization is that it has a number of different possible de?nitions, some of which cause it to be a whole-network property that is very dif?cult to optimize for. Possible de?nitions of lifetime include: time until any sensor fails, the time until all sensors fail, or something in-between. In the ?rst case, to maximize sample rates and meet lifetime goals, sensors will need to dynamically adjust the network topology to reduce the burden of message forwarding on nodes with little power and shed operator load so that all sensors’ batteries drain at the same rate (or as close to the same rate as possible.)
