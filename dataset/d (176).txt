We employ PeerSim1 as the network simulator. In this simulation, we consider networks with up to 5000 peers. We use a subset of the Yahoo! Directory as the global ontology, which consists of 18,151 ontology paths that are su?cient to capture daily interests. We also keep the top-ranked URLs attached to each ontology path (altogether 152,171 URLs) that are provided by Yahoo! Directory at the download time. We de?ne a category to be a distinct ontology path with length 2 from the ontology root. For each N S randomly chosen distinct peers, we choose x distinct categories. Here N is the network size, S is the number of leaf-group number, and x follows Poisson distribution (with mean 10). Then the URLs corresponding to the categories are randomly distributed among peers such that each peer obtains 10 URLs on average. We uniform randomly choose n peers, each issuing one query, with 80% of the keyword queries correspond to l = 4 ontology paths under the distribution of the weights, while the remaining 20% of the queries correspond to l randomly chosen ontology paths. We compare the recall per query of our approach against the baseline algorithms in Figure 1, where “EMD”, “Jaccard”, and “RW” represent our EMD-based approach, the Jaccard-distance-based strategy [2], and the random-walkbased strategy respectively. Our approach achieves a higher recall than the Jaccard-distance-based strategy and the randomwalk-based strategy. We vary the TTL from 3 to 7 for practical reason. As shown in Table 1, when the network size is 5000, the
1http://peersim.sourceforge.net/
average number of messages (including both the messages for query forwarding and for result returning purposes) consumed by the random-walk-based strategy is about three to seven times higher than the worst-case of our approach, which is costly. The number of messages consumed by the random-walk-based strategy may go beyond the network size since random-walk is stateless and can revisit the same peers in separate walks. Moreover, the reply messages to query issuers are included in the evaluation, such that the number of messages are now a?ected by the number of peers that contain query results. In this simulation, query processing completes when all the URLs corresponding to the ontology paths contained in the query are retrieved. We expect much fewer messages in practical scenarios, because users may terminate the query processing interactively once the satisfactory results with respect to their criteria have been retrieved. 