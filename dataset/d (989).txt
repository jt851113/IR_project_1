To evaluate the sensitivity of our comparisons (Section 5.2), we re-ran our simulations using different parameters.In our previous comparisons, we placed 5 sources in the bottom left corner of the sensor field. How sensitive is our comparison to this source placement scheme ? In this experiment, we randomly placed 5 sources in the sensor field and re-ran our simulations of Section 5.2. Our results in Figure 7(a) indicate that the energy savings of the greedy aggregation are reduced to 30%. In these scenarios, sources are not necessarily closer to one another than to a sink.
Even using the greedy incremental tree, the paths from the sources to the sink may not be early shared or merged. We also conducted an experiment to evaluate the sensitivity of our comparisons to the number of sinks (from 1 to 5 sinks) in the sensor field of 350 nodes. Similar to experiments in Section 5.2, 5 sources are randomly selected from nodes in a 80m by 80m square at the bottom left corner of the sensor field. The first sink is placed at the top right corner whereas the other sinks are uniformly scattered across the sensor field. With more sinks, the energy efficiency of the greedy aggregation is comparable to that of the opportunistic aggregation (Figure 8(a)). This impact of the random sink placement is similar to that of the random source placement. However, the event delivery ratio of the greedy aggregation is higher than that of the opportunistic aggregation because the early aggregation of the greedy aggregation reduces the overall traffic in general (Figure 8(c)).To study the sensitivity of our comparisons to the number of sources, we re-ran our simulations in the sensor field of 350 nodes with 2, 5, 8, 11, and 14 sources. As the number of sources increases, the energy efficiency of the greedy aggregation coverges to that of the opportunistic aggregation (Figure 9(a)). Given the high number of
sources in the fixed area, our source placement scheme is approaching the event-radius model whereby sources are very close to one another. In these scenarios, paths from several sources are likely to be merged early even without path optimization. So far, we assumed perfect aggregation for all our previous experiments. Of particular interest is the impact of other aggregation functions on the energy savings of the greedy aggregation. In this experiment, we used the linear aggregation for such sensitivity study. Given the linear aggregation, the size of aggregate (denoted by) is the linear function of data items in the aggregate. Specifically,where is the number of data items in the aggregate, each data item size is 28 bytes, and the header size  is 36 bytes for our experiment. This
linear aggregation is lossless but not energy-efficient because the only savings are the packet headers. Given that this aggregation function depends on the number of data items, we re-ran the previous experiment with this linear aggregation. As expected, the adverse impact of the inefficient aggregation function becomes more evident with the increased number of sources or data items (Figure 10(a)). In one experiment (11 sources), we found that the greedy aggregation can achieve 36% energy savings using the linear aggregation function whereas it can achieve 43% energy savings using the perfect aggregation function.