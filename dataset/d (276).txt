Some of the highest-volume sensing comes from earthorbiting satellites like NASA’s EOSDIS (Earth Observing System Data and Information System) project. The database research community attempted to aggressively address satellitebased remote sensing in the early 1990’s [21, 16, 3]. Unfortunately, DBMS-centric approaches did not have much impact in this arena, for several reasons. First, the volume of structured data in some satellite applications is dwarfed by the volume of so-called “large objects” – large raster images. In these cases, the DBMS only really helps with the low-volume metadata, which some consider to be secondary to the “real”, highvolume image data. This explanation does not tell the whole story, however. In fact, some of the most important EOSDIS data (e.g., the CERES data on radiation [41]) is structured and very “database-like”. Moreover, a team led by Mike Stonebraker and Jim Gray proposed an alternative architecture for EOSDIS [19] that argued persuasively in economic and technical terms for a DBMS-centric approach based on off-the-shelf object-relational software. So why were database techniques not adopted for satellite data? The answer lies with the “market” for remote sensing. NASA is one of the only customers for remote sensing data management software. They best understand their own needs, and their software budgets are fairly large – software is cheaper than launching a set of satellites. Hence the traditional DBMS focus on general-purpose applicability and ?exibility is not of primary importance to this community. Instead, they seem to prefer to write or contract out custom code. As of 2001, their Product Generation Executive codebase, which does their data processing, was over 750,000 lines of code, with an additional 550,000 lines of validation code [34]. This compares to the size of a signi?cant DBMS implementation – the open-source PostgreSQL codebase is currently 412,000 lines of code, for example. If the sole “customer” is willing to write that much custom code, this is probably not an attractive space for clever general-purpose systems research.
