The bene?t that an SRT provides is dependent on the quality of the clustering of children beneath parents. If the descendents of some node n are clustered around the value of the index attribute at n, then a query
that applies to n will likely also apply to its descendents. This can be expected for geographic attributes, for example, since network topology is correlated with geography.
We study three policies for SRT parent selection. In the ?rst, random approach, each node picks a random parent from the nodes with which it can communication reliably. In the second, closest-parent approach, each parent reports the value of its index attribute with the SRT-build request, and children pick the parent whose attribute value is closest to their own. In the clustered approach, nodes select a parent as in the closest-parent approach, except, if a node hears a sibling node send a parent selection message, it snoops on the message to determine its siblings parent and value. It then picks its own parent (which could be the same as one of its siblings) to minimize spread of attribute values underneath all of its available parents.
We studied these policies in a simple simulation environment – nodes were arranged on an nxn grid and were asked to choose a constant attribute value from some distribution (which we varied between experiments.) We used a perfect (lossless) connectivity model where each node could talk to its immediate neighbors in the grid (so routing trees were n nodes deep), and each node had 8 neighbors (with 3 choices of parent, on average.) We compared the total number of nodes involved in range queries of different sizes for the three SRT parent selection policies to the best-case approach and the no SRT approach. The best-case approach would only result if exactly those nodes that overlapped the range predicate were activated, which is not possible in our topologies but provides a convenient lower bound. In the no SRT approach, all nodes participate in each query.
We experimented with a number of sensor value distributions; we report on two here. In the random distribution, each constant attribute value was randomly and uniformly selected from the interval [0,1000]. In the geographic distribution, (one-dimensional) sensor values were computed based on a function of sensor’s x and y position in the grid, such that a sensor’s value tended to be highly correlated to the values of its neighbors.
Figure 7 shows the number of nodes which participate in queries over variably-sized query intervals (where the interval size is shown on the X axis) of the attribute space in a 20x20 grid. The interval for queries was randomly selected from the uniform distribution. Each point in the graph was obtained by averaging over ?ve trials for each of the three parent selection policies in each of the sensor distributions (for a total of 30 experiments). In each experiment, an SRT was constructed according to the appropriate policy and sensor value distribution. Then, for each interval size, the average number of nodes participating in 100 randomly constructed queries of the appropriate size was measured.
For both distributions, the clustered approach was superior to other SRT algorithms, beating the random approach by about 25% and the closest parent approach by about 10% on average. With the geographic distribution, the performance of the clustered approach is close to optimal: for most ranges, all of the nodes in the range tend to be co-located, so few intermediate nodes are required to relay information for queries in which they themselves are not participating. This simulation is admittedly optimistic, since geography and topology are perfectly correlated It is a bit surprising that, even for a random distribution of sensor values, the closest-parent and clustered approaches are substantially better than the random-parent approach. The reason for this is that these techniques reduce the spread of sensor values beneath parents, thereby reducing the probability that a randomly selected range query will require a particular parent to participate.
As the previous results show, the bene?t of using an SRT can be substantial. There are, however, maintenance and construction costs associated with SRTs; as discussed above. Construction costs are comparable to those in conventional sensor networks (which also have a routing tree), but slightly higher due to the fact that parent selection messages are explicitly sent, whereas parents do not always require con?rmation from their children in other sensor network environments.

