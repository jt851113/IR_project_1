For purposes of illustration, we use XML-QL queries on a
database of stock quotes.
The two XML-QL queries in Figure 3.1 retrieve stock
information on either Intel (symbol INTC) or Microsoft (symbol
MSFT). Many users are likely to submit similar queries for
different stock symbols. An expression signature is created for
the selection predicates by replacing the constants appearing in
the predicates with a placeholder. The expression signature for
the two queries in Figure 3.1 is shown in Figure 3.2.
A query plan is generated by Niagara query parser. Figure 3.3
shows the query plans of the queries in Figure 3.1. The lower
part in each query plan corresponds to the expression signature
of the queries. A new operator TriggerAction is added on the top
of the XML-QL query plan after the query is parsed. Expression
signatures allow queries with the same syntactic structure to be
grouped together to share computation [HCH+99]. Expression
signatures for different queries will be discussed later. Note, in
NiagaraCQ, users can specify an XML-QL query without
specifying the destination data sources by using a “*” in the file
name position and giving a DTD name. This allows users to
specify continuous queries without naming the data sources. Our
group query optimizer is easily extended to support this
capability by using a mapping mechanism offered by the
Niagara Search Engine. Without losing generality for our
incremental grouping algorithm, we assume continuous queries
are defined on a specific data source in this paper.