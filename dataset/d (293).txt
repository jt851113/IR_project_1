Sensor queries involve stored data and sensor data, i.e. relations and sequences.  We define a sensor query as an acyclic graph of relational and sequence operators. The inputs of a relational operator are base relations or the output of another relational operator; the inputs of a sequence operator are base sequences or the output of another sequence operator, i.e. relations are manipulated using relational operators and sequences are manipulated using sequence operators. There are three exceptions to this rule. Three operators allow combining relations and sequences: (a) the relational projection operator can take a sequence as input and project out the position attribute to obtain a relation, (b) a cross product operator can take as input a relation and a sequence to produce a sequence and (c) an aggregate operator can take a sequence as input and a grouping list that does not include the position attribute.  Sensor queries are long running.  To each sensor query is associated a time interval of the form [O, O + T] where O is the time at which it is submitted and T is the number of time quantums (possibly 0) during which it is running. During the span of a long-running query, relations and sensor sequences might be updated. An update to a relation R can be an insert, a delete, or modifications of a record in R. An update to a sensor sequence S is the insertion of a new record associated to a position greater than or equal to all the undefined positions in S (see Section 3.1.1). Concretely, each sensor inserts incrementally the set of records produced by a signal processing function at the position corresponding to the production time. A sensor query defines a view that is persistent during its associated time interval. This persistent view is maintained to reflect the updates on the sensor database. In particular, the view is maintained to reflect the updates that are repeatedly performed on sensor time series. Jagadish et al. [13] showed that persistent views over relations and sequences could be maintained incrementally without accessing the complete sequences, given restrictions on the updates that are permitted on relations and sequences, and given restrictions on the algebra used to compose queries.  Informally, persistent views can be maintained incrementally if updates occur in increasing position order and if the algebra used to compose queries does not allow sequences to be combined using any relational operators. Both conditions hold in our definition of a sensor database. 
